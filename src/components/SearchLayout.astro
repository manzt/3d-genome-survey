---
import { load } from "../loader.ts";

const figures = await load();
const codeSet = new Set<string>();
for (const figure of figures) {
	for (const code of figure.codes) {
		codeSet.add(code);
	}
}
const codes = [...codeSet].toSorted();
---

<div class="flex h-[calc(100vh-4rem)]">
  <div class="w-48 bg-gray-50 border-r border-gray-200 flex flex-col">
    <div class="p-2 bg-gray-50">
      <input 
        type="text" 
        placeholder="Search codes..." 
        class="w-full px-2 py-1 text-sm border border-gray-300 rounded"
        id="codeSearch"
      />
    </div>
    <div class="flex-1 overflow-y-auto p-2">
      <div class="space-y-1">
        {codes.map((code) => (
          <label class="flex items-center space-x-1 text-sm">
            <input 
              type="checkbox" 
              class="form-checkbox h-3 w-3 text-blue-600"
              data-code={code}
            />
            <span class="truncate">{code}</span>
          </label>
        ))}
      </div>
    </div>
  </div>
  <div class="flex-1 overflow-y-auto">
    <slot />
  </div>
</div>

<script>
const galleryItems = document.querySelectorAll(".gallery-item") as NodeListOf<HTMLDivElement>;
const searchInput= document.getElementById("codeSearch") as HTMLInputElement;
const checkboxes = document.querySelectorAll('input[type="checkbox"]') as NodeListOf<HTMLInputElement>;

function filterGallery() {
	const selectedCodes = Array.from(checkboxes)
		.filter((checkbox) => checkbox.checked)
		.map((checkbox) => checkbox.dataset.code);

	galleryItems.forEach((item) => {
		const itemCodes = Array.from(item.querySelectorAll(".code-pill")).map((pill) => pill.textContent);
		const shouldShow = selectedCodes.length === 0 || selectedCodes.every((code) => itemCodes.includes(code));
		item.style.display = shouldShow ? "block" : "none";
	});
}

function filterCodeList(searchTerm: string) {
	const labels = document.querySelectorAll("label");
	labels.forEach((label) => {
		const codeName = label.querySelector("span").textContent;
		const shouldShow = codeName.toLowerCase().includes(
			searchTerm.toLowerCase(),
		);
		label.style.display = shouldShow ? "flex" : "none";
	});
}

checkboxes.forEach((checkbox) => {
	checkbox.addEventListener("change", filterGallery);
});

searchInput.addEventListener("input", (e) => {
	filterCodeList(e.target.value);
});
</script> 

