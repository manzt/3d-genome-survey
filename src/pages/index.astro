---
import ImageGallery from "../components/ImageGallery.astro";
import SearchLayout from "../components/SearchLayout.astro";
import Layout from "../layouts/Layout.astro";

import { load } from "../loader.ts";

let figures = await load();

let sources = figures.reduce((acc, d) => {
	acc.add(d.source.title);
	return acc;
}, new Set());

let codes = figures.reduce((acc, d) => {
	for (let code of d.codes) {
		acc.add(code);
	}
	return acc;
}, new Set());
---

<Layout title="3D Genome Visualization Analysis" description="Analysis of 3D genome visualization techniques and methods">
	<div class="flex flex-col h-screen">
		<div class="px-4 sm:px-6 lg:px-8 py-4">
			<h1 class="text-3xl font-bold text-gray-900 mb-2">3D Genome Visualization Survey</h1>
			<div class="flex items-center gap-6 text-sm text-gray-600">
				<div class="flex items-center gap-1">
					<span class="font-medium" id="sourcesCount">{sources.size}</span>
					<span>papers</span>
				</div>
				<div class="flex items-center gap-1">
					<span class="font-medium">{codes.size}</span>
					<span>codes</span>
				</div>
				<div class="flex items-center gap-1">
					<span class="font-medium" id="quotationsCount">{figures.length}</span>
					<span>quotations</span>
				</div>
			</div>
		</div>
		<div class="flex-1 min-h-0">
			<SearchLayout>
				<ImageGallery />
			</SearchLayout>
		</div>
	</div>
</Layout>

<script>
const checkboxes = document.querySelectorAll('input[type="checkbox"]');
const galleryItems = document.querySelectorAll(".gallery-item");
const sourcesCount = document.getElementById("sourcesCount");
const quotationsCount = document.getElementById("quotationsCount");

function updateStatistics() {
	const selectedCodes = Array.from(checkboxes)
		.filter((checkbox) => checkbox.checked)
		.map((checkbox) => checkbox.dataset.code);

	// Count visible sources
	const visibleSources = Array.from(galleryItems)
		.filter((item) => item.style.display !== "none")
		.length;

	// Count visible quotations (assuming each gallery item represents a quotation)
	const visibleQuotations = visibleSources;

	sourcesCount.textContent = visibleSources;
	quotationsCount.textContent = visibleQuotations;
}

checkboxes.forEach((checkbox) => {
	checkbox.addEventListener("change", () => {
		// First update the gallery
		const selectedCodes = Array.from(checkboxes)
			.filter((cb) => cb.checked)
			.map((cb) => cb.dataset.code);

		galleryItems.forEach((item) => {
			const itemCodes = Array.from(item.querySelectorAll(".code-pill"))
				.map((pill) => pill.textContent);

			const shouldShow = selectedCodes.length === 0 ||
				selectedCodes.every((code) => itemCodes.includes(code));
			item.style.display = shouldShow ? "block" : "none";
		});

		updateStatistics();
	});
});
</script>
